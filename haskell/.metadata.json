{
  "name": "haskell",
  "instructor": "Josef Macera",
  "type": "essential",
  "languages": ["Haskell"],
  "skills": [
    "Learn the fundamentals of functional programming with Haskell, including pure functions, immutability, and composition.",
    "Understand how to set up Haskell on your computer and create your first program.",
    "Explore data types, pattern matching, and list manipulation in Haskell.",
    "Learn about higher-order functions, recursion, and lazy evaluation in Haskell.",
    "Discover how to use monads to handle side-effects and IO in Haskell.",
    "Master functional programming concepts with practical examples and assignments in Haskell.",
    "Recap the course and learn best practices for functional programming with Haskell."
  ],
  "title": "Introduction to Haskell",
  "description": "Learn functional programming the Haskell way, and dive into the world of pure functions, functional composition, and more.",
  "modules": [
    {
      "name": "Module 1: Introduction to Functional Programming",
      "lessons": [
        { "name": "what_is_functional_programming", "video": "1-1.mp4" },
        { "name": "setting_up_haskell_on_your_computer", "video": "1-2.mp4" },
        { "name": "first_program_in_haskell", "video": "1-3.mp4" },
        { "name": "functional_vs_imperative_programming", "video": "1-4.mp4" }
      ]
    },
    {
      "name": "Module 2: Data Types and Pattern Matching",
      "lessons": [
        { "name": "data_types_in_haskell", "video": "2-1.mp4" },
        { "name": "pattern_matching_in_haskell", "video": "2-2.mp4" },
        { "name": "list_manipulation_in_haskell", "video": "2-3.mp4" },
        { "name": "tuples_in_haskell", "video": "2-4.mp4" }
      ]
    },
    {
      "name": "Module 3: Higher-Order Functions and Recursion",
      "lessons": [
        { "name": "higher_order_functions_in_haskell", "video": "3-1.mp4" },
        { "name": "recursion_in_haskell", "video": "3-2.mp4" },
        { "name": "implementing_algorithms_in_haskell", "video": "3-3.mp4" },
        { "name": "lambdas_and_currying_in_haskell", "video": "3-4.mp4" }
      ]
    },
    {
      "name": "Module 4: Monads and IO Operations",
      "lessons": [
        { "name": "what_is_a_monad_in_haskell", "video": "4-1.mp4" },
        { "name": "handling_io_operations_in_haskell", "video": "4-2.mp4" },
        { "name": "the_io_monad_in_haskell", "video": "4-3.mp4" },
        {
          "name": "using_monads_for_error_handling_in_haskell",
          "video": "4-4.mp4"
        }
      ]
    },
    {
      "name": "Module 5: Conclusion",
      "lessons": [
        { "name": "recap_of_the_course", "video": "5-1.mp4" },
        {
          "name": "best_practices_for_functional_programming_in_haskell",
          "video": "5-2.mp4"
        },
        {
          "name": "resources_for_further_learning_and_development",
          "video": "5-3.mp4"
        }
      ]
    }
  ]
}
